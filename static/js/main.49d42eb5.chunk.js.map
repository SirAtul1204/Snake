{"version":3,"sources":["Snake.js","Food.js","App.js","index.js"],"names":["Snake","p5","this","x","y","speedX","speedY","dir","score","a","b","food","width","height","Math","abs","length","push","getRandomFood","headX","headY","shift","i","fill","noStroke","rect","flag","noLoop","Food","floor","random","App","props","state","setup","canvasParentRef","createCanvas","parent","frameRate","snake","draw","background","update","checkEat","setState","gameEnded","checkDeath","keyPressed","keyCode","changeDirection","getPlayAgainButton","className","onClick","playAgain","window","location","reload","Fragment","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49d42eb5.chunk.js","sourcesContent":["class Snake {\n  constructor(p5) {\n    this.p5 = p5;\n    this.x = [0];\n    this.y = [0];\n    this.speedX = 0;\n    this.speedY = 0;\n    this.dir = \"\";\n    this.score = 0;\n  }\n\n  changeDirection(a, b) {\n    this.speedX = a;\n    this.speedY = b;\n  }\n\n  checkEat(food, width, height) {\n    if (\n      Math.abs(this.x[this.x.length - 1] - food.x) < 20 &&\n      Math.abs(this.y[this.x.length - 1] - food.y) < 20\n    ) {\n      if (this.dir === \"UP\") {\n        this.x.push(food.x);\n        this.y.push(food.y - 20);\n      } else if (this.dir === \"LEFT\") {\n        this.x.push(food.x - 20);\n        this.y.push(food.y);\n      } else if (this.dir === \"RIGHT\") {\n        this.x.push(food.x + 20);\n        this.y.push(food.y);\n      } else if (this.dir === \"DOWN\") {\n        this.x.push(food.x);\n        this.y.push(food.y + 20);\n      }\n\n      food.x = food.getRandomFood(width);\n      food.y = food.getRandomFood(height);\n\n      this.score++;\n      return this.score;\n    }\n  }\n\n  update(width, height) {\n    let headX = this.x[this.x.length - 1];\n    let headY = this.y[this.y.length - 1];\n\n    this.x.shift();\n    this.y.shift();\n\n    headX += this.speedX;\n    headY += this.speedY;\n\n    this.x.push(headX);\n    this.y.push(headY);\n\n    for (let i = 0; i < this.x.length; i++) {\n      if (this.x[i] + 20 > width) {\n        this.x[i] = 0;\n      } else if (this.x[i] < 0) {\n        this.x[i] = width;\n      } else if (this.y[i] + 20 > height) {\n        this.y[i] = 0;\n      } else if (this.y[i] < 0) {\n        this.y[i] = height;\n      }\n    }\n  }\n\n  draw() {\n    for (let i = 0; i < this.x.length; i++) {\n      this.p5.fill(0, 255, 0);\n      this.p5.noStroke();\n      this.p5.rect(this.x[i], this.y[i], 20, 20);\n    }\n  }\n\n  checkDeath() {\n    let flag = 0;\n    for (let i = 0; i < this.x.length - 1; i++) {\n      if (\n        Math.abs(this.x[this.x.length - 1] - this.x[i]) < 20 &&\n        Math.abs(this.y[this.y.length - 1] - this.y[i]) < 20\n      ) {\n        this.p5.noLoop();\n        flag = 1;\n      }\n    }\n    if (flag === 1) {\n      return true;\n    } else return false;\n  }\n}\n\nexport default Snake;\n","class Food {\n  constructor(p5, width, height) {\n    this.p5 = p5;\n    this.x = this.getRandomFood(width);\n    this.y = this.getRandomFood(height);\n  }\n\n  getRandomFood = (a) => {\n    let x = Math.floor(Math.random() * a) - 20;\n    if (x % 20 === 0 && x > 0) {\n      return x;\n    } else {\n      return this.getRandomFood(a);\n    }\n  };\n\n  draw() {\n    this.p5.fill(255, 0, 0);\n    this.p5.noStroke();\n    this.p5.rect(this.x, this.y, 20, 20);\n  }\n}\n\nexport default Food;\n","import React, { Component } from \"react\";\nimport Sketch from \"react-p5\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.snake = null;\n    this.state.score = 0;\n    this.state.gameEnded = false;\n  }\n  state = {};\n\n  setup = (p5, canvasParentRef) => {\n    p5.createCanvas(600, 600).parent(canvasParentRef);\n    p5.frameRate(12);\n    this.snake = new Snake(p5);\n    this.food = new Food(p5, p5.width, p5.height);\n  };\n\n  draw = (p5) => {\n    // p5.scale(this.rez);\n    p5.background(0);\n    this.food.draw();\n    this.snake.update(p5.width, p5.height);\n    this.snake.checkEat(this.food, p5.width, p5.height);\n    let score = this.snake.score;\n    this.setState({ score: score });\n    let gameEnded = this.snake.checkDeath();\n    this.setState({ gameEnded: gameEnded });\n    this.snake.draw();\n  };\n\n  keyPressed = (p5) => {\n    if (p5.keyCode === 38) {\n      this.snake.changeDirection(0, -20);\n      this.snake.dir = \"UP\";\n    } else if (p5.keyCode === 37) {\n      this.snake.changeDirection(-20, 0);\n      this.snake.dir = \"LEFT\";\n    } else if (p5.keyCode === 39) {\n      this.snake.changeDirection(20, 0);\n      this.snake.dir = \"RIGHT\";\n    } else if (p5.keyCode === 40) {\n      this.snake.changeDirection(0, 20);\n      this.snake.dir = \"DOWN\";\n    }\n  };\n\n  getPlayAgainButton = () => {\n    if (this.state.gameEnded) {\n      return (\n        <button className=\"btn\" onClick={this.playAgain}>\n          {\" \"}\n          Play Again\n        </button>\n      );\n    }\n    return <div></div>;\n  };\n\n  playAgain = () => {\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <p className=\"score\">Score: {this.state.score}</p>\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          keyPressed={this.keyPressed}\n        />\n        {this.getPlayAgainButton()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}